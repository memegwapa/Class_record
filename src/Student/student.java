/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student;


import Dashboard.IndividualPrinting;
import config.dbConnector;
import function.edit;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author user
 */
public class student extends javax.swing.JInternalFrame implements ActionListener, MouseListener {
  public String destination="";
File selectedFile;
public String oldpath;
public String path;
    public student() {
        initComponents();
        displayData();
           this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0)); 
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI(); 
        bi.setNorthPane(null);
    }
      
  
  public void displayData(){
       try{
           dbConnector dbc = new dbConnector();
           ResultSet rs = dbc.getData("SELECT *FROM tbl_studentlist");
          userTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(SQLException ex){
           System.out.println("Errors: "+ex.getMessage());
        
       }
  }
 

  

  
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        panel = new JPanel();
        ref = new JPanel();
        jLabel8 = new JLabel();
        Add = new JPanel();
        jLabel9 = new JLabel();
        jLabel11 = new JLabel();
        jTextField1 = new JTextField();
        jLabel12 = new JLabel();
        jScrollPane1 = new JScrollPane();
        userTable = new JTable();
        edit = new JPanel();
        jLabel1 = new JLabel();
        delete = new JPanel();
        jLabel3 = new JLabel();
        print = new JPanel();
        jLabel2 = new JLabel();

        jPanel1.setLayout(null);

        getContentPane().setLayout(new AbsoluteLayout());

        panel.setBackground(new Color(151, 188, 98));
        panel.setForeground(new Color(255, 51, 51));
        panel.setPreferredSize(new Dimension(654, 593));

        ref.setBackground(new Color(151, 188, 98));
        ref.addMouseListener(this);
        ref.setLayout(null);

        jLabel8.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel8.setIcon(new ImageIcon(getClass().getResource("/images/Refresh (3).png"))); // NOI18N
        jLabel8.setVerticalAlignment(SwingConstants.BOTTOM);
        ref.add(jLabel8);
        jLabel8.setBounds(0, 0, 30, 30);

        Add.setBackground(new Color(151, 188, 98));
        Add.addMouseListener(this);
        Add.setLayout(new AbsoluteLayout());

        jLabel9.setIcon(new ImageIcon(getClass().getResource("/images/Add User Group Woman Man (1).png"))); // NOI18N
        Add.add(jLabel9, new AbsoluteConstraints(0, 0, -1, -1));

        jLabel11.setBackground(new Color(255, 255, 255));
        jLabel11.setFont(new Font("Arial", 1, 30)); // NOI18N
        jLabel11.setForeground(new Color(255, 255, 255));
        jLabel11.setText("Student list");

        jTextField1.setBackground(new Color(151, 188, 98));
        jTextField1.setForeground(new Color(255, 255, 255));
        jTextField1.setText("Search");
        jTextField1.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, new Color(0, 0, 0)));
        jTextField1.addActionListener(this);

        userTable.setOpaque(false);
        jScrollPane1.setViewportView(userTable);

        edit.setBackground(new Color(151, 188, 98));
        edit.addMouseListener(this);
        edit.setLayout(new AbsoluteLayout());

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/images/Edit (3).png"))); // NOI18N
        edit.add(jLabel1, new AbsoluteConstraints(0, 0, -1, -1));

        delete.setBackground(new Color(151, 188, 98));
        delete.addMouseListener(this);
        delete.setLayout(null);

        jLabel3.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel3.setIcon(new ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        jLabel3.addMouseListener(this);
        delete.add(jLabel3);
        jLabel3.setBounds(0, 0, 30, 30);

        print.setBackground(new Color(151, 188, 98));
        print.addMouseListener(this);
        print.setLayout(null);

        jLabel2.setIcon(new ImageIcon(getClass().getResource("/images/Print (4).png"))); // NOI18N
        print.add(jLabel2);
        jLabel2.setBounds(0, 0, 30, 30);

        GroupLayout panelLayout = new GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 211, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(Add, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(ref, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(print, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 588, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField1, GroupLayout.Alignment.LEADING)
                        .addComponent(ref, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(edit, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Add, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(delete, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                    .addComponent(print, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 436, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        getContentPane().add(panel, new AbsoluteConstraints(0, 0, 1010, 760));

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == jTextField1) {
            student.this.jTextField1ActionPerformed(evt);
        }
    }

    public void mouseClicked(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseClicked(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseClicked(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseClicked(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseClicked(evt);
        }
        else if (evt.getSource() == jLabel3) {
            student.this.jLabel3MouseClicked(evt);
        }
        else if (evt.getSource() == print) {
            student.this.printMouseClicked(evt);
        }
    }

    public void mouseEntered(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseEntered(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseEntered(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseEntered(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseEntered(evt);
        }
        else if (evt.getSource() == print) {
            student.this.printMouseEntered(evt);
        }
    }

    public void mouseExited(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseExited(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseExited(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseExited(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseExited(evt);
        }
        else if (evt.getSource() == print) {
            student.this.printMouseExited(evt);
        }
    }

    public void mousePressed(MouseEvent evt) {
    }

    public void mouseReleased(MouseEvent evt) {
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void AddMouseEntered(MouseEvent evt) {//GEN-FIRST:event_AddMouseEntered
     Add.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_AddMouseEntered

    private void AddMouseExited(MouseEvent evt) {//GEN-FIRST:event_AddMouseExited
        Add.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_AddMouseExited

    private void editMouseEntered(MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
       edit.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(MouseEvent evt) {//GEN-FIRST:event_editMouseExited
         edit.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_editMouseExited

    private void refMouseEntered(MouseEvent evt) {//GEN-FIRST:event_refMouseEntered
       ref.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_refMouseEntered

    private void refMouseExited(MouseEvent evt) {//GEN-FIRST:event_refMouseExited
        ref.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_refMouseExited

    private void AddMouseClicked(MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
      edit ed= new  edit ();
      ed.setVisible(true);
         ed.action="Add";
         ed.label.setText("SAVE");
    }//GEN-LAST:event_AddMouseClicked

    private void editMouseClicked(MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
int rowindex= userTable.getSelectedRow();
if(rowindex<0){
    JOptionPane.showMessageDialog(null,"Please Select an Item");
}else{
    TableModel model=userTable.getModel();
    edit ed= new edit ();
    ed.ids.setText(""+model.getValueAt(rowindex,0));
      ed.fn.setText(""+model.getValueAt(rowindex,1));
        ed.ln.setText(""+model.getValueAt(rowindex,2));
          ed.age.setText(""+model.getValueAt(rowindex,3));         
            ed.gender=model.getValueAt(rowindex,4).toString();
           
             String gend =model.getValueAt(rowindex,4).toString();
            
            if(gend.equals("Male")){
    ed.male.setSelected(true);
}
         if(gend.equals("Female")){
    ed.female.setSelected(true);
}
             ed.setVisible(true);
            ed.action="Update";
            ed.label.setText("UPDATE");
    
}         

                                  
 
    }//GEN-LAST:event_editMouseClicked

    private void refMouseClicked(MouseEvent evt) {//GEN-FIRST:event_refMouseClicked
      displayData();
    }//GEN-LAST:event_refMouseClicked

    private void jLabel3MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
                                    
    int rowIndex = userTable.getSelectedRow();
    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select data first from the table!");
    } else {
        TableModel model = userTable.getModel();
        Object value = model.getValueAt(rowIndex, 0);
        String id = value.toString();
        int a = JOptionPane.showConfirmDialog(null, "Are you sure to delete ID: " + id);
        if (a == JOptionPane.YES_OPTION) {
            dbConnector dbc = new dbConnector();
            int s_id = Integer.parseInt(id);
            dbc.deleteData(s_id, "tbl_studentlist");
            displayData();
        }
    }


    }//GEN-LAST:event_jLabel3MouseClicked

    private void printMouseClicked(MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
   
        int rowindex = userTable.getSelectedRow();
        if(rowindex < 0){
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        }else{

            try{
                dbConnector dbc = new dbConnector();
                TableModel tbl = userTable.getModel();
                ResultSet rs = dbc.getData("SELECT * FROM tbl_studentlist WHERE s_id = "+tbl.getValueAt(rowindex,0)+"");
                if(rs.next()){
                    IndividualPrinting ipt = new IndividualPrinting ();
                    ipt.uid.setText(""+rs.getInt("s_id "));
                    ipt.fn.setText(""+rs.getString("s_fname"));
                    ipt.ln.setText(""+rs.getString("s_lname"));
                    ipt.age.setText(""+rs.getString("s_age"));
                    ipt.gender.setText(""+rs.getString("s_gender"));
                 
                   ipt.setVisible(true);
                     this.dispose();
                }

            }catch(SQLException ex){
                System.out.println(""+ex);
            }
        }
       
    }//GEN-LAST:event_printMouseClicked

    private void deleteMouseEntered(MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
      delete.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
     delete.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_deleteMouseExited

    private void printMouseEntered(MouseEvent evt) {//GEN-FIRST:event_printMouseEntered
     print.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_printMouseEntered

    private void printMouseExited(MouseEvent evt) {//GEN-FIRST:event_printMouseExited
       print.setBackground(new Color (151,188,98)); 
    }//GEN-LAST:event_printMouseExited

    private void deleteMouseClicked(MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
 
    }//GEN-LAST:event_deleteMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    JPanel Add;
    JPanel delete;
    JPanel edit;
    JLabel jLabel1;
    JLabel jLabel11;
    JLabel jLabel12;
    JLabel jLabel2;
    JLabel jLabel3;
    JLabel jLabel8;
    JLabel jLabel9;
    JPanel jPanel1;
    JScrollPane jScrollPane1;
    JTextField jTextField1;
    JPanel panel;
    JPanel print;
    JPanel ref;
    JTable userTable;
    // End of variables declaration//GEN-END:variables
}
